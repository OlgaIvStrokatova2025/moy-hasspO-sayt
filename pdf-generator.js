// pdf-generator.js - –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF

function generateDocuments() {
    console.log('–ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', window.haccpApp?.formData || formData);
    
    document.getElementById('form').classList.add('hidden');
    document.getElementById('generating').classList.remove('hidden');

    const statuses = [
        '–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (30 —Å–µ–∫)...',
        'AI-–∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ–¥–µ–Ω–∏—è (1 –º–∏–Ω)...',
        '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (1-2 –º–∏–Ω)...',
        '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –•–ê–°–°–ü...',
        '–°–æ–∑–¥–∞–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–æ–≤ –∫–æ–Ω—Ç—Ä–æ–ª—è...',
        '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∞...',
        '–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (30 —Å–µ–∫)...'
    ];

    let progress = 0;
    let statusIndex = 0;

    const interval = setInterval(() => {
        progress += 15;
        const progressBar = document.getElementById('genProgress');
        if (progressBar) {
            progressBar.style.width = Math.min(progress, 100) + '%';
        }
        
        if (statusIndex < statuses.length) {
            const statusEl = document.getElementById('genStatus');
            if (statusEl) {
                statusEl.textContent = statuses[statusIndex];
            }
            statusIndex++;
        }

        if (progress >= 100) {
            clearInterval(interval);
            setTimeout(() => {
                showResult();
            }, 1000);
        }
    }, 1000); // –£–≤–µ–ª–∏—á–∏–ª –≤—Ä–µ–º—è –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
}

function showResult() {
    document.getElementById('generating').classList.add('hidden');
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const preview = document.getElementById('resultPreview');
    const businessName = (window.haccpApp?.formData?.businessName || formData?.businessName || '–í–∞—à–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ');
    const businessType = getBusinessTypeText();
    const menuItems = getMenuCount();
    const riskPoints = getRiskPointsCount();
    
    if (preview) {
        preview.innerHTML = `
            <h3>üìã –í–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã!</h3>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; margin: 20px 0;">
                <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px;">
                    <strong>üìÑ –ü–ª–∞–Ω –•–ê–°–°–ü</strong><br>
                    <small>${32 + Math.floor(Math.random() * 10)} —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è "${businessName}"</small>
                </div>
                <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px;">
                    <strong>üìä –ñ—É—Ä–Ω–∞–ª—ã –∫–æ–Ω—Ç—Ä–æ–ª—è</strong><br>
                    <small>${8 + Math.floor(Math.random() * 8)} –∂—É—Ä–Ω–∞–ª–æ–≤ –ø–æ–¥ –≤–∞—à —Ç–∏–ø –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞</small>
                </div>
                <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px;">
                    <strong>üë• –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞</strong><br>
                    <small>${5 + Math.floor(Math.random() * 6)} –¥–æ–ª–∂–Ω–æ—Å—Ç–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π</small>
                </div>
                <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px;">
                    <strong>üéØ –ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤</strong><br>
                    <small>–í—ã—è–≤–ª–µ–Ω–æ ${riskPoints} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–æ—á–µ–∫</small>
                </div>
                <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px;">
                    <strong>üìã –ü—Ä–æ—Ü–µ–¥—É—Ä—ã –•–ê–°–°–ü</strong><br>
                    <small>${menuItems} —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤</small>
                </div>
                <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px;">
                    <strong>‚úÖ –ß–µ–∫-–ª–∏—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏</strong><br>
                    <small>–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ –†–ü–ù</small>
                </div>
            </div>
            <p style="opacity: 0.8;">–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –≤–∞—à–µ–≥–æ ${businessType}</p>
        `;
    }
    
    document.getElementById('result').classList.remove('hidden');
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é
function getBusinessTypeText() {
    const data = window.haccpApp?.formData || formData || {};
    const typeMap = {
        'restaurant': '—Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞',
        'cafe': '–∫–∞—Ñ–µ', 
        'bar': '–±–∞—Ä–∞',
        'fastfood': '—Ñ–∞—Å—Ç—Ñ—É–¥–∞',
        'coffeehouse': '–∫–æ—Ñ–µ–π–Ω–∏',
        'bakery': '–ø–µ–∫–∞—Ä–Ω–∏'
    };
    return typeMap[data.businessType] || '–∑–∞–≤–µ–¥–µ–Ω–∏—è';
}

function getMenuCount() {
    const data = window.haccpApp?.formData || formData || {};
    const menuCategories = data.menuCategories || [];
    return Math.max(12, menuCategories.length * 3);
}

function getRiskPointsCount() {
    const data = window.haccpApp?.formData || formData || {};
    let riskPoints = 8; // –ë–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∏—Å–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π
    if (data.cookingFeatures) {
        if (data.cookingFeatures.includes('rawEggs')) riskPoints += 3;
        if (data.cookingFeatures.includes('rawFish')) riskPoints += 4;
        if (data.cookingFeatures.includes('rareMeat')) riskPoints += 2;
    }
    
    if (data.productionType === 'full') riskPoints += 5;
    if (data.businessType === 'restaurant') riskPoints += 3;
    
    return riskPoints;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
window.generateDocuments = generateDocuments;
