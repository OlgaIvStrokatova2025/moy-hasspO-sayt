// step1-content.js - –ë–ª–æ–∫ 1: –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è

function generateStep1Content() {
   return `
       <h3>1.1 –†–µ–∫–≤–∏–∑–∏—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</h3>
       
       <div class="grid-2">
           <div>
               <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ *</label>
               <input type="text" id="businessName" class="input" placeholder="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö">
           </div>
           
           <div>
               <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ-–ø—Ä–∞–≤–æ–≤–∞—è —Ñ–æ—Ä–º–∞ *</label>
               <div class="grid" style="grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));">
                   <button class="btn btn-secondary" onclick="selectOption('legalForm', 'ip', this)">–ò–ü</button>
                   <button class="btn btn-secondary" onclick="selectOption('legalForm', 'ooo', this)">–û–û–û</button>
                   <button class="btn btn-secondary" onclick="selectOption('legalForm', 'ao', this)">–ê–û</button>
                   <button class="btn btn-secondary" onclick="selectOption('legalForm', 'other', this)">–î—Ä—É–≥–æ–µ</button>
               </div>
               <div class="hint" style="margin-top: 10px;">
                   üí° –í–ª–∏—è–µ—Ç –Ω–∞ –ø–µ—Ä–µ—á–µ–Ω—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –•–ê–°–°–ü
               </div>
           </div>
       </div>
       
       <div class="grid-2">
           <div>
               <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–ò–ù–ù *</label>
               <input type="text" id="inn" class="input" placeholder="1234567890" maxlength="12">
           </div>
           
           <div>
               <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
               <input type="tel" id="phone" class="input" placeholder="+7 (999) 123-45-67">
           </div>
       </div>
       
       <div>
           <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å *</label>
           <input type="text" id="legalAddress" class="input" placeholder="–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏">
       </div>
       
       <div>
           <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å –∑–∞–≤–µ–¥–µ–Ω–∏—è</label>
           <input type="text" id="actualAddress" class="input" placeholder="–ê–¥—Ä–µ—Å, –≥–¥–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞–≤–µ–¥–µ–Ω–∏–µ">
           <label style="display: flex; align-items: center; margin-top: 10px; cursor: pointer;">
               <input type="checkbox" id="sameAddress" style="margin-right: 10px;" onchange="toggleSameAddress()">
               <span>–°–æ–≤–ø–∞–¥–∞–µ—Ç —Å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –∞–¥—Ä–µ—Å–æ–º</span>
           </label>
       </div>
       
       <h3>1.2 –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h3>
       
       <div class="grid-2">
           <div>
               <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è *</label>
               <input type="text" id="directorName" class="input" placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á">
           </div>
           
           <div>
               <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–î–æ–ª–∂–Ω–æ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è *</label>
               <div class="grid">
                   <button class="btn btn-secondary" onclick="selectOption('directorPosition', 'director', this)">–î–∏—Ä–µ–∫—Ç–æ—Ä</button>
                   <button class="btn btn-secondary" onclick="selectOption('directorPosition', 'manager', this)">–£–ø—Ä–∞–≤–ª—è—é—â–∏–π</button>
                   <button class="btn btn-secondary" onclick="selectOption('directorPosition', 'owner', this)">–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫</button>
               </div>
           </div>
       </div>
       
       <div>
           <label style="display: block; margin-bottom: 8px; opacity: 0.9;">Email *</label>
           <input type="email" id="businessEmail" class="input" placeholder="info@restaurant.ru">
       </div>
       
       <div>
           <label style="display: block; margin-bottom: 8px; opacity: 0.9;">–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –•–ê–°–°–ü *</label>
           <div class="grid">
               <button class="btn btn-secondary" onclick="selectOption('haccpResponsible', 'same', this)">–¢–æ—Ç –∂–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å</button>
               <button class="btn btn-secondary" onclick="selectOption('haccpResponsible', 'other', this)">–î—Ä—É–≥–æ–µ –ª–∏—Ü–æ</button>
           </div>
           <div id="otherResponsible" class="hidden" style="margin-top: 15px;">
               <input type="text" id="haccpResponsibleName" class="input" placeholder="–§–ò–û –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞ –•–ê–°–°–ü">
               <input type="text" id="haccpResponsiblePosition" class="input" placeholder="–î–æ–ª–∂–Ω–æ—Å—Ç—å">
           </div>
       </div>
       
       <div class="hint">
           üí° <strong>–ü–æ–¥—Å–∫–∞–∑–∫–∞:</strong> –ü–æ –∑–∞–∫–æ–Ω—É –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ª–∏—Ü–æ –∑–∞ –ø–∏—â–µ–≤—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å. 
           –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∏–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—É—á–µ–Ω–∏–µ–º.
       </div>
   `;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è –ë–ª–æ–∫–∞ 1
function validateStep1() {
   const errors = [];
   
   // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
   const requiredFields = [
       { id: 'businessName', name: '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏' },
       { id: 'inn', name: '–ò–ù–ù' },
       { id: 'phone', name: '–¢–µ–ª–µ—Ñ–æ–Ω' },
       { id: 'legalAddress', name: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å' },
       { id: 'directorName', name: '–§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è' },
       { id: 'businessEmail', name: 'Email' }
   ];
   
   requiredFields.forEach(field => {
       const element = document.getElementById(field.id);
       if (!element || !element.value.trim()) {
           errors.push(`–ü–æ–ª–µ "${field.name}" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è`);
       }
   });
   
   // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π
   if (!formData.legalForm) {
       errors.push('–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ-–ø—Ä–∞–≤–æ–≤—É—é —Ñ–æ—Ä–º—É');
   }
   
   if (!formData.directorPosition) {
       errors.push('–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è');
   }
   
   if (!formData.haccpResponsible) {
       errors.push('–£–∫–∞–∂–∏—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞ –•–ê–°–°–ü');
   }
   
   // –í–∞–ª–∏–¥–∞—Ü–∏—è –ò–ù–ù
   const innElement = document.getElementById('inn');
   if (innElement && innElement.value) {
       const inn = innElement.value.replace(/\D/g, '');
       if (inn.length !== 10 && inn.length !== 12) {
           errors.push('–ò–ù–ù –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä');
       }
   }
   
   // –í–∞–ª–∏–¥–∞—Ü–∏—è email
   const emailElement = document.getElementById('businessEmail');
   if (emailElement && emailElement.value) {
       const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
       if (!emailRegex.test(emailElement.value)) {
           errors.push('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å');
       }
   }
   
   // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
   const phoneElement = document.getElementById('phone');
   if (phoneElement && phoneElement.value) {
       const phone = phoneElement.value.replace(/\D/g, '');
       if (phone.length !== 11) {
           errors.push('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
       }
   }
   
   // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è "–¥—Ä—É–≥–æ–≥–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ"
   if (formData.haccpResponsible === 'other') {
       const nameElement = document.getElementById('haccpResponsibleName');
       const positionElement = document.getElementById('haccpResponsiblePosition');
       
       if (!nameElement || !nameElement.value.trim()) {
           errors.push('–£–∫–∞–∂–∏—Ç–µ –§–ò–û –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞ –•–ê–°–°–ü');
       }
       
       if (!positionElement || !positionElement.value.trim()) {
           errors.push('–£–∫–∞–∂–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞ –•–ê–°–°–ü');
       }
   }
   
   return errors;
}

// –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π
document.addEventListener('DOMContentLoaded', function() {
   // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ù–ù
   document.addEventListener('input', function(e) {
       if (e.target.id === 'inn') {
           e.target.value = e.target.value.replace(/\D/g, '').substring(0, 12);
       }
       
       // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
       if (e.target.id === 'phone') {
           let value = e.target.value.replace(/\D/g, '');
           if (value.length > 0) {
               if (value.length <= 11) {
                   value = value.replace(/^(\d{1})(\d{3})(\d{3})(\d{2})(\d{2})$/, '+7 ($2) $3-$4-$5');
                   if (value.indexOf('+7 (') !== 0 && value.length > 1) {
                       value = '+7 (' + value.substring(1, 4) + ') ' + value.substring(4, 7) + '-' + value.substring(7, 9) + '-' + value.substring(9, 11);
                   }
               }
           }
           e.target.value = value;
       }
   });
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
if (typeof module !== 'undefined' && module.exports) {
   module.exports = { generateStep1Content, validateStep1 };
}
